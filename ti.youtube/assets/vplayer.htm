<!DOCTYPE html>
<html>
	<head>
		<meta name="viewport" content="width=device-width">
	</head>
  <body bgcolor="#000000" style="margin:0; padding:0">
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <div id="player" style="width: 100%; margin: 0"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
      
      var ytPlayerWidth = Math.max(window.screen.width, window.innerWidth);	//(window.innerWidth > 0) ? window.innerWidth : screen.width;
      var ytPlayerHeight = parseInt(0.609375 * ytPlayerWidth);
      
      var defaultVideo = 'izZmSubBKhk';		//'Select a Video Below' = 'wgg5Tch0-Hs'			'Loading...' = 'izZmSubBKhk'

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: ytPlayerHeight,	//'195',
          width: ytPlayerWidth,		//'320',
          videoId: defaultVideo,
          //playerVars: { 'autoplay': 1, 'controls': 0 },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }
      
      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        //event.target.playVideo();
        player.loadVideoById(defaultVideo);
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
      	/*if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }*/
		//setTimeout(unMutePlayer, 200);
      }
      function stopVideo() {
        player.stopVideo();
      }
      function setDefaultVideo(videoId) {
      	defaultVideo = videoId;
      	player.cueVideoById(videoId);
      }
    </script>
  </body>
</html>